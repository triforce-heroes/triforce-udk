import{BufferBuilder as e}from"@triforce-heroes/triforce-core/BufferBuilder";import{MultipleLanguageDataItem as t}from"./LanguageDataItem/MultipleLanguageDataItem.js";import{SingleLanguageDataItem as r}from"./LanguageDataItem/SingleLanguageDataItem.js";export class LanguageData{constructor(e,t,r,i){this.items=new Map,this.reference=e,this.projectName=t,this.languageId=r,this.references=i}static from(e){let t=e.readInt64();e.readLengthPrefixedString(4),e.skipPadding(4);let r=e.readLengthPrefixedString(4);e.skipPadding(4),e.readLengthPrefixedString(4),e.skipPadding(4);let i=e.readUnsignedInt32(),n=e.readUnsignedInt32(),a=[];for(let t=0;t<n;t++)a.push(e.readInt64());return new LanguageData(t,r,i,a)}toBuffer(){let t=new e;for(let e of(t.writeInt64(this.reference),t.writeLengthPrefixedString("LanguageData",4),t.pad(4),t.writeLengthPrefixedString(this.projectName,4),t.pad(4),t.writeLengthPrefixedString("Assembly-CSharp",4),t.pad(4),t.writeUnsignedInt32(this.languageId),t.writeUnsignedInt32(this.references.length),this.references))t.writeInt64(e);return t.build()}fill(e){for(let i of this.references){let n=e.get(i);if(n instanceof r)this.items.set(n.messageId,n);else if(n instanceof t){let t=e.get(n.references.at(0));this.items.set(t.messageId,t)}}}setMessage(e,t){let i=this.items.get(e);i instanceof r&&(i.message=t)}}